name: Deploy üöÄ
on:
    push:
        branches: [main]

jobs:
    deploy-front:
        name: üöÄ Deploy front ‚öõÔ∏è

        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: frontend

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: ‚öôÔ∏è Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: "16"

            - name: üíº Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: üì¶ yarn
              run: yarn

            - name: üî® yarn build
              run: yarn build

            - name: ü™û scp build to vps
              uses: garygrossgarten/github-action-scp@release
              with:
                  host: ${{ secrets.VPS_IP }}
                  username: ${{ secrets.VPS_SSH_USERNAME }}
                  privateKey: ${{ secrets.SSH_KEY }}
                  port: ${{ secrets.VPS_SSH_PORT }}
                  rmRemote: true
                  local: ./frontend/build
                  remote: ${{ secrets.VPS_FRONT_FOLDER }}

            - name: üîÑ sudo systemctl restart nginx
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.VPS_IP }}
                  username: ${{ secrets.VPS_SSH_USERNAME }}
                  key: ${{ secrets.SSH_KEY }}
                  port: ${{ secrets.VPS_SSH_PORT }}
                  script: sudo systemctl restart nginx

    deploy-back:
        name: üöÄ Deploy back ü¶Ä

        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: ü™û scp api to vps
              uses: garygrossgarten/github-action-scp@release
              with:
                  host: ${{ secrets.VPS_IP }}
                  username: ${{ secrets.VPS_SSH_USERNAME }}
                  privateKey: ${{ secrets.SSH_KEY }}
                  port: ${{ secrets.VPS_SSH_PORT }}
                  rmRemote: true
                  local: ./api
                  remote: ${{ secrets.VPS_API_FOLDER }}

            - name: üìú touch .env
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.VPS_IP }}
                  username: ${{ secrets.VPS_SSH_USERNAME }}
                  key: ${{ secrets.SSH_KEY }}
                  port: ${{ secrets.VPS_SSH_PORT }}
                  script: |
                      cd ~/api
                      touch .env
                      echo NAVITIA_TOKEN="${{ secrets.NAVITIA_TOKEN }}" > .env

            - name: üêã docker build {...} && docker run {...}
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.VPS_IP }}
                  username: ${{ secrets.VPS_SSH_USERNAME }}
                  key: ${{ secrets.SSH_KEY }}
                  port: ${{ secrets.VPS_SSH_PORT }}
                  script: |
                      cd ~/api
                      docker build -t api .
                      docker image prune --filter label=stage=builder -f
                      docker stop api
                      docker rm api
                      docker run -d -p 8000:8000 --restart always --name api api
